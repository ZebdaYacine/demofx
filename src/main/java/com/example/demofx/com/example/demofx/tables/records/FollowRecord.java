/*
 * This file is generated by jOOQ.
 */
package com.example.demofx.tables.records;


import com.example.demofx.tables.Follow;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FollowRecord extends UpdatableRecordImpl<FollowRecord> implements Record9<Long, LocalDate, LocalDate, Long, Long, Long, Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>doctorlite.follow.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>doctorlite.follow.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>doctorlite.follow.dateEnter</code>.
     */
    public void setDateenter(LocalDate value) {
        set(1, value);
    }

    /**
     * Getter for <code>doctorlite.follow.dateEnter</code>.
     */
    public LocalDate getDateenter() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>doctorlite.follow.dateGo</code>.
     */
    public void setDatego(LocalDate value) {
        set(2, value);
    }

    /**
     * Getter for <code>doctorlite.follow.dateGo</code>.
     */
    public LocalDate getDatego() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for <code>doctorlite.follow.idPatient</code>.
     */
    public void setIdpatient(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>doctorlite.follow.idPatient</code>.
     */
    public Long getIdpatient() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>doctorlite.follow.idService</code>.
     */
    public void setIdservice(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>doctorlite.follow.idService</code>.
     */
    public Long getIdservice() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>doctorlite.follow.idDoctor</code>.
     */
    public void setIddoctor(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>doctorlite.follow.idDoctor</code>.
     */
    public Long getIddoctor() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>doctorlite.follow.idPsychologist</code>.
     */
    public void setIdpsychologist(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>doctorlite.follow.idPsychologist</code>.
     */
    public Long getIdpsychologist() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>doctorlite.follow.sickness</code>.
     */
    public void setSickness(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>doctorlite.follow.sickness</code>.
     */
    public String getSickness() {
        return (String) get(7);
    }

    /**
     * Setter for <code>doctorlite.follow.status</code>.
     */
    public void setStatus(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>doctorlite.follow.status</code>.
     */
    public String getStatus() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, LocalDate, LocalDate, Long, Long, Long, Long, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, LocalDate, LocalDate, Long, Long, Long, Long, String, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Follow.FOLLOW.ID;
    }

    @Override
    public Field<LocalDate> field2() {
        return Follow.FOLLOW.DATEENTER;
    }

    @Override
    public Field<LocalDate> field3() {
        return Follow.FOLLOW.DATEGO;
    }

    @Override
    public Field<Long> field4() {
        return Follow.FOLLOW.IDPATIENT;
    }

    @Override
    public Field<Long> field5() {
        return Follow.FOLLOW.IDSERVICE;
    }

    @Override
    public Field<Long> field6() {
        return Follow.FOLLOW.IDDOCTOR;
    }

    @Override
    public Field<Long> field7() {
        return Follow.FOLLOW.IDPSYCHOLOGIST;
    }

    @Override
    public Field<String> field8() {
        return Follow.FOLLOW.SICKNESS;
    }

    @Override
    public Field<String> field9() {
        return Follow.FOLLOW.STATUS;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDate component2() {
        return getDateenter();
    }

    @Override
    public LocalDate component3() {
        return getDatego();
    }

    @Override
    public Long component4() {
        return getIdpatient();
    }

    @Override
    public Long component5() {
        return getIdservice();
    }

    @Override
    public Long component6() {
        return getIddoctor();
    }

    @Override
    public Long component7() {
        return getIdpsychologist();
    }

    @Override
    public String component8() {
        return getSickness();
    }

    @Override
    public String component9() {
        return getStatus();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDate value2() {
        return getDateenter();
    }

    @Override
    public LocalDate value3() {
        return getDatego();
    }

    @Override
    public Long value4() {
        return getIdpatient();
    }

    @Override
    public Long value5() {
        return getIdservice();
    }

    @Override
    public Long value6() {
        return getIddoctor();
    }

    @Override
    public Long value7() {
        return getIdpsychologist();
    }

    @Override
    public String value8() {
        return getSickness();
    }

    @Override
    public String value9() {
        return getStatus();
    }

    @Override
    public FollowRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public FollowRecord value2(LocalDate value) {
        setDateenter(value);
        return this;
    }

    @Override
    public FollowRecord value3(LocalDate value) {
        setDatego(value);
        return this;
    }

    @Override
    public FollowRecord value4(Long value) {
        setIdpatient(value);
        return this;
    }

    @Override
    public FollowRecord value5(Long value) {
        setIdservice(value);
        return this;
    }

    @Override
    public FollowRecord value6(Long value) {
        setIddoctor(value);
        return this;
    }

    @Override
    public FollowRecord value7(Long value) {
        setIdpsychologist(value);
        return this;
    }

    @Override
    public FollowRecord value8(String value) {
        setSickness(value);
        return this;
    }

    @Override
    public FollowRecord value9(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public FollowRecord values(Long value1, LocalDate value2, LocalDate value3, Long value4, Long value5, Long value6, Long value7, String value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FollowRecord
     */
    public FollowRecord() {
        super(Follow.FOLLOW);
    }

    /**
     * Create a detached, initialised FollowRecord
     */
    public FollowRecord(Long id, LocalDate dateenter, LocalDate datego, Long idpatient, Long idservice, Long iddoctor, Long idpsychologist, String sickness, String status) {
        super(Follow.FOLLOW);

        setId(id);
        setDateenter(dateenter);
        setDatego(datego);
        setIdpatient(idpatient);
        setIdservice(idservice);
        setIddoctor(iddoctor);
        setIdpsychologist(idpsychologist);
        setSickness(sickness);
        setStatus(status);
    }
}
